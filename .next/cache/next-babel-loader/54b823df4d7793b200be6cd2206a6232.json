{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Simon\\\\Desktop\\\\proj\\\\news\\\\pages\\\\p\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.show.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.show.summary.replace(/<[/]?[pb]>/g, '')), __jsx(\"img\", {\n    src: props.show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          show = _context.sent;\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/Simon/Desktop/proj/news/pages/p/[id].js"],"names":["Layout","fetch","Post","props","show","name","summary","replace","image","medium","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SACd,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAFJ,EAGI;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADc;AAAA,CAAlB;;AAQAP,IAAI,CAACQ,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,UAAAA,EADW,GACJD,OAAO,CAACE,KADJ,CACXD,EADW;AAAA;AAAA,2CAEDX,KAAK,wCAAiCW,EAAjC,EAFJ;;AAAA;AAEbE,UAAAA,GAFa;AAAA;AAAA,2CAGAA,GAAG,CAACC,IAAJ,EAHA;;AAAA;AAGbX,UAAAA,IAHa;AAKnBY,UAAAA,OAAO,CAACC,GAAR,yBAA6Bb,IAAI,CAACC,IAAlC;AALmB,2CAMZ;AAAED,YAAAA,IAAI,EAAJA;AAAF,WANY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAeF,IAAf","sourcesContent":["import Layout from '../../components/Layout';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Post = props => (\r\n    <Layout>\r\n        <h1>{props.show.name}</h1>\r\n        <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\r\n        <img src={props.show.image.medium} />\r\n    </Layout>\r\n);\r\n\r\nPost.getInitialProps = async function(context) {\r\n    const { id } = context.query;\r\n    const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\r\n    const show = await res.json();\r\n\r\n    console.log(`Fetched show: ${show.name}`);\r\n    return { show };\r\n};\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}